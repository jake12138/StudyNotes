# 1 给uniform修饰的变量传值
**注意**:
- 由于OpenGL ES由C语言编写,但是C语言不支持函数的重载,所以会有很多名字相同后缀不同的函数版本存在.其中函数名中包含数字(1.2.3.4)表示接受这个数字的参数个数个用于更改uniform变量的值,i表示32位整形,f表示32位浮点型,ub表示8位无符号byte,ui表示32位无符号整形,v表示接受相应的指针类型.
- 在对着色器的变量赋值之前，需要先调用glUseProgram函数,否则会设置失败并出现GL_INVALID_OPERATION (0x502错误)
## 1.1 给int类型传值
```c
// 为当前程序对象指定Uniform变量(int类型)的值
void glUniform1i (GLint location, GLint v0);

// 给int类型的Uniform数组赋值,count为赋值的个数
void glUniform1iv (GLint location, GLsizei count, const GLint *value);
```
**示例**：
如果着色器上定义了
```glsl
uniform int[2] value
```
那么设置的时候可以调用
```c
int data[4] = {1,2,3,4};
// 设置两个int到shader上赋值给数组
glUniform1iv(location, 2, data);
```

## 1.2 给float类型赋值
```c
// 给Uniform的float类型赋值
 void glUniform1f (GLint location, GLfloat v0);

 // 给Uniform的float[]数组类型赋值，count为赋值的个数
 void glUniform1fv (GLint location, GLsizei count, const GLfloat *value);
```

## 1.3 给vec2类型赋值
```c
// 给 ivec2类型赋值
void glUniform2i(GLint location, GLint v0, GLint v1);

// 给ivec2[]数组赋值，count为ivec2元素的个数
void glUniform2iv(GLint location, GLsizei count, const GLint *value);
```